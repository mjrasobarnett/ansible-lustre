- name: Setup admin client
  hosts: admin_client
  gather_facts: false
  become: true
  tasks:
    - import_role:
        name: client
    
    - name: mount lustre project subdirectory
      mount:
        fstype: lustre
        src: "{{ lustre.mgs_addr }}@{{ lustre.mgs_lnet }}:/{{ lustre.fs_name }}"
        path: "{{ lustre.mount_point }}"
        state: mounted
        opts: "skpath=/etc/lustre,defaults,_netdev,noauto,x-systemd.automount,x-systemd.requires=lnet.service"
        # NB: /etc/lustre must exist - currently done in client role
        # opts are systemd defaults from http://wiki.lustre.org/Mounting_a_Lustre_File_System_on_Client_Nodes
      register: mount
      until: "mount.failed == false"
      retries: 20
      delay: 1

    - name: create csd3/srcp directories in lustre fs
      file:
        path: "/mnt/lustre/{{ item }}"
        state: directory
        owner: root
      loop:
        - csd3
        - srcp
      
    - name: create project owner users/groups (fake LDAP)
      # NB: this is annoying: only needed because ansible's file module (below) needs user/group names, not uid/gids
      include_tasks: create-users.yml
      vars:
        users: "{{ projects[item].users }}"
      loop: "{{ projects.keys() | list }}"

    - name: create project directories in lustre fs
      file:
        path: "/mnt/lustre/{{ item.value.root }}/{{ item.key }}"
        owner: "{{ item.key }}"
        group: "{{ item.key }}"
        mode: "{{ projects[item.key].mode }}"
        state: directory
      loop: "{{ projects | dict2items }}"

    - name: create files in project directories to show mountpoints
      file:
        path: "/mnt/lustre/{{ item.value.root }}/{{ item.key }}/this-is-{{ item.key }}.txt"
        state: touch
      loop: "{{ projects | dict2items }}"
